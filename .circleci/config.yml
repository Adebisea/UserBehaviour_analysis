version: 2.1

commands:
  destroy-infra:
    description: Destroy infrastructure on failure.
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            terraform destroy --auto-approve

  install-ansible:
    description: Install Ansible
    steps:
      - run:
          name: Install Ansible
          command: |
            sudo apt update
            sudo apt install ansible -y

  install-terraform:
    description: Install Terraform
    steps:
      - run:
          name: Install Terraform
          command: |
            wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo apt-get update && sudo apt-get install -y gnupg software-properties-commonsudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
            sudo apt update && sudo apt install terraform -y

jobs:
  configure-infrastructure-plan:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: Configure infrastructure
          command: |
            cd .circleci/test_ec2
            terraform init
            terraform plan


  configure-infrastructure-apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: Configure infrastructure
          command: |
            cd .circleci/test_ec2  
            terraform init       
            terraform apply --auto-approve
      - destroy-infra


  host-ip:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
      - run:
          name: Add ec2 instance ip to ansible inventory
          command: |
            cd .circleci/ansible
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:project,Values=userbehav" \
              --output text >> inventory.ini
      - persist_to_workspace:
          root: ~/
          paths:
            - project/.circleci/ansible/inventory.ini
            
  install-dependencies:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "c9:d9:37:64:91:f8:38:9c:7b:59:71:1e:3f:c7:32:72"
      - attach_workspace:
          at: ~/
      - install-ansible
      - run:
          name: install dependencies
          command: |
            cd .circleci/ansible
            ansible-playbook -i inventory.ini playbook.yaml



workflows:
  default:
    jobs:
      - configure-infrastructure-plan
      - configure-infrastructure-apply:
          requires: [configure-infrastructure-plan]
      - host-ip:
          requires: [configure-infrastructure-apply]
      - install-dependencies:
          requires: [host-ip]
  